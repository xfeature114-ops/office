Sub ExtractRFQTables_Summary_WithCharts()

    Dim ws As Worksheet: Set ws = ActiveSheet
    Dim outSheet As Worksheet
    Dim sectionHeaders As Variant
    sectionHeaders = Array("Opportunity Discussion", "Organise", "KOM", "CBOM", "Quote preparation", "Quote review & submission", "Negotiation")

    ' Create or clear "Extracted Summary" sheet
    On Error Resume Next
    Set outSheet = ThisWorkbook.Sheets("Extracted Summary")
    If outSheet Is Nothing Then
        Set outSheet = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        outSheet.Name = "Extracted Summary"
    Else
        outSheet.Cells.Clear
        ' Delete existing charts
        Dim c As ChartObject
        For Each c In outSheet.ChartObjects
            c.Delete
        Next c
    End If
    On Error GoTo 0

    ' Find required column positions from row 2
    Dim colSynced As Long, colOppName As Long, colRFQ As Long, i As Long
    For i = 1 To ws.Cells(2, ws.Columns.Count).End(xlToLeft).Column
        Select Case LCase(Trim(ws.Cells(2, i).Text))
            Case "synced quote": colSynced = i
            Case "opportunity name": colOppName = i
            Case "rfq received date": colRFQ = i
        End Select
    Next i
    If colSynced = 0 Or colOppName = 0 Or colRFQ = 0 Then
        MsgBox "? Missing header(s): Synced Quote, Opportunity Name or RFQ Received Date!", vbCritical
        Exit Sub
    End If

    Dim outRow As Long: outRow = 1
    Dim lastRow As Long: lastRow = ws.Cells(ws.Rows.Count, 2).End(xlUp).Row
    Dim section As Variant, sectionStart As Long, sectionEnd As Long
    Dim j As Long, aging As Variant
    Dim maxAging() As Variant: ReDim maxAging(0 To UBound(sectionHeaders))
    ' ==== NEW ARRAYS for avg ====
    Dim sumAging() As Double: ReDim sumAging(0 To UBound(sectionHeaders))
    Dim countAging() As Long: ReDim countAging(0 To UBound(sectionHeaders))
    ' ============================

    Dim tempData As Collection
    Dim rowData As Variant
    Dim r As Long
    Dim chartCount As Long: chartCount = 0

    For i = 0 To UBound(sectionHeaders)
        section = sectionHeaders(i)
        sectionStart = 0: sectionEnd = 0

        ' Locate section start
        For j = 1 To lastRow
            If Trim(ws.Cells(j, 2).Value) = section Then
                sectionStart = j
                Exit For
            End If
        Next j
        If sectionStart = 0 Then GoTo NextSection

        ' Locate section end
        For j = sectionStart + 1 To lastRow
            If LCase(Trim(ws.Cells(j, 2).Value)) = "subtotal" Then
                sectionEnd = j - 1
                Exit For
            End If
        Next j
        If sectionEnd = 0 Then sectionEnd = lastRow

        Set tempData = New Collection
        maxAging(i) = 0
        sumAging(i) = 0          ' initialize the sum for this section
        countAging(i) = 0        ' initialize the count for this section

        For j = sectionStart + 1 To sectionEnd
            If Application.CountA(ws.Rows(j)) = 0 Then GoTo SkipRow
            Dim rfqDateVal As Variant
            rfqDateVal = ws.Cells(j, colRFQ).Value

            If IsDate(rfqDateVal) Then
                Dim rfqDate As Date: rfqDate = CDate(rfqDateVal)
                If rfqDate <= Date Then
                    aging = Date - rfqDate
                    rowData = Array(ws.Cells(j, colSynced).Value, ws.Cells(j, colOppName).Value, rfqDate, aging)
                    tempData.Add rowData
                    If aging > maxAging(i) Then maxAging(i) = aging
                    ' Accumulate sum and count
                    sumAging(i) = sumAging(i) + aging
                    countAging(i) = countAging(i) + 1
                End If
            End If
SkipRow:
        Next j

        If tempData.Count > 0 Then
            ' Section title
            outSheet.Cells(outRow, 1).Value = section
            outSheet.Cells(outRow, 1).Font.Bold = True
            outRow = outRow + 1

            ' Table header
            outSheet.Cells(outRow, 1).Value = "Synced Quote"
            outSheet.Cells(outRow, 2).Value = "Opportunity Name"
            outSheet.Cells(outRow, 3).Value = "RFQ Received Date"
            outSheet.Cells(outRow, 4).Value = "Aging (days)"
            outSheet.Range(outSheet.Cells(outRow, 1), outSheet.Cells(outRow, 4)).Font.Bold = True
            outSheet.Range(outSheet.Cells(outRow, 1), outSheet.Cells(outRow, 4)).Interior.Color = RGB(200, 200, 200)
            Dim tableStartRow As Long: tableStartRow = outRow
            outRow = outRow + 1

            ' Data rows
            For r = 1 To tempData.Count
                rowData = tempData(r)
                outSheet.Cells(outRow, 1).Resize(1, 4).Value = rowData
                outRow = outRow + 1
            Next r

            ' Borders
            With outSheet.Range(outSheet.Cells(tableStartRow, 1), outSheet.Cells(outRow - 1, 4)).Borders
                .LineStyle = xlContinuous
                .Weight = xlThin
            End With

            ' === CHART PART ===
            chartCount = chartCount + 1
            Dim chObj As ChartObject
            Set chObj = outSheet.ChartObjects.Add(Left:=500, Width:=350, _
                                                  Top:=outSheet.Cells(tableStartRow, 6).Top, Height:=150)
            chObj.Chart.ChartType = xlColumnClustered
            chObj.Chart.SetSourceData Source:=outSheet.Range(outSheet.Cells(tableStartRow + 1, 4), outSheet.Cells(outRow - 1, 4))
            chObj.Chart.SeriesCollection(1).XValues = outSheet.Range(outSheet.Cells(tableStartRow + 1, 1), outSheet.Cells(outRow - 1, 1))
            chObj.Chart.HasTitle = True
            chObj.Chart.ChartTitle.Text = section & " - RFQ Aging"
            chObj.Chart.Axes(xlCategory).HasTitle = True
            chObj.Chart.Axes(xlCategory).AxisTitle.Text = "Synced Quote"
            chObj.Chart.Axes(xlValue).HasTitle = True
            chObj.Chart.Axes(xlValue).AxisTitle.Text = "Aging (days)"
            chObj.Name = "Chart_" & chartCount
            chObj.Chart.SeriesCollection(1).ApplyDataLabels Type:=xlDataLabelsShowValue

            outRow = outRow + 2
        End If
NextSection:
    Next i

    ' === Summary Table ===
    Dim summaryStartCol As Long: summaryStartCol = 7 ' column G
    Dim summaryStartRow As Long: summaryStartRow = 1

    outSheet.Cells(summaryStartRow, summaryStartCol).Value = "Summary"
    outSheet.Cells(summaryStartRow, summaryStartCol + 1).Value = "Avg Aging Days" ' <--- CHANGED LABEL
    outSheet.Range(outSheet.Cells(summaryStartRow, summaryStartCol), outSheet.Cells(summaryStartRow, summaryStartCol + 1)).Font.Bold = True
    outSheet.Range(outSheet.Cells(summaryStartRow, summaryStartCol), outSheet.Cells(summaryStartRow, summaryStartCol + 1)).Interior.Color = RGB(200, 200, 200)

    Dim summaryRow As Long: summaryRow = summaryStartRow + 1
    For i = 0 To UBound(sectionHeaders)
        If countAging(i) > 0 Then    ' Only if there is at least one value
            outSheet.Cells(summaryRow, summaryStartCol).Value = sectionHeaders(i)
            outSheet.Cells(summaryRow, summaryStartCol + 1).Value = Round(sumAging(i) / countAging(i), 2) ' AVGERAGE
            summaryRow = summaryRow + 1
        End If
    Next i

    With outSheet.Range(outSheet.Cells(summaryStartRow, summaryStartCol), outSheet.Cells(summaryRow - 1, summaryStartCol + 1)).Borders
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With

    MsgBox "? Done! Tables + charts saved to 'Extracted Summary'", vbInformation

End Sub





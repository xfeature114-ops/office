Sub ExtractRFQTables_Summary_WithCharts()

    Dim ws As Worksheet: Set ws = ActiveSheet
    Dim outSheet As Worksheet
    Dim sectionHeaders As Variant
    sectionHeaders = Array("Opportunity Discussion", "Organise", "Scrub BOM", "KOM", "CBOM", _
                           "Quote preparation", "Quote review & submission", "Negotiation", "CBOM Re-work")

    ' Create or clear "Extracted Summary" sheet
    On Error Resume Next
    Set outSheet = ThisWorkbook.Sheets("Extracted Summary")
    If outSheet Is Nothing Then
        Set outSheet = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        outSheet.Name = "Extracted Summary"
    Else
        outSheet.Cells.Clear
        ' Delete existing charts
        Dim c As ChartObject
        For Each c In outSheet.ChartObjects
            c.Delete
        Next c
    End If
    On Error GoTo 0

    ' Find required column positions from row 2 dynamically
    Dim colSynced As Long, colOppName As Long, colRFQ As Long
    Dim colCustomerRequest As Long, colInsideSales As Long, colCBOMCommitDate As Long
    colSynced = 0: colOppName = 0: colRFQ = 0: colCustomerRequest = 0: colInsideSales = 0: colCBOMCommitDate = 0

    Dim i As Long, lastCol As Long
    lastCol = ws.Cells(2, ws.Columns.Count).End(xlToLeft).Column
    For i = 1 To lastCol
        Select Case LCase(Trim(ws.Cells(2, i).Text))
            Case "synced quote": colSynced = i
            Case "opportunity name": colOppName = i
            Case "rfq received date": colRFQ = i
            Case "customer request date": colCustomerRequest = i
            Case "inside_sales": colInsideSales = i
            Case "cbom commit date": colCBOMCommitDate = i
        End Select
    Next i

    If colSynced = 0 Or colOppName = 0 Or colRFQ = 0 Or colInsideSales = 0 Then
        MsgBox "? Missing header(s): Synced Quote, Opportunity Name, RFQ Received Date, Inside Sales, or required Date columns!", vbCritical
        Exit Sub
    End If
    If colCBOMCommitDate = 0 Then
        MsgBox "? Missing header: CBOM Commit Date. Required for CBOM section.", vbCritical
        Exit Sub
    End If
    If colCustomerRequest = 0 Then
        MsgBox "? Missing header: Customer Request Date. Required for non-CBOM sections.", vbCritical
        Exit Sub
    End If

    Dim outRow As Long: outRow = 1
    Dim lastRow As Long: lastRow = ws.Cells(ws.Rows.Count, 2).End(xlUp).Row
    Dim section As Variant, sectionStart As Long, sectionEnd As Long
    Dim j As Long, agingVal As Variant
    Dim maxAging() As Variant: ReDim maxAging(0 To UBound(sectionHeaders))
    Dim sumAging() As Double: ReDim sumAging(0 To UBound(sectionHeaders))
    Dim countAging() As Long: ReDim countAging(0 To UBound(sectionHeaders))
    Dim countProjects() As Long: ReDim countProjects(0 To UBound(sectionHeaders))
    Dim tempData As Collection
    Dim rowData As Variant
    Dim r As Long
    Dim chartCount As Long: chartCount = 0

    ' Store each table header row for later coloring
    Dim tableHeaderRows() As Long
    ReDim tableHeaderRows(0 To UBound(sectionHeaders))

    For i = 0 To UBound(sectionHeaders)
        section = sectionHeaders(i)
        sectionStart = 0: sectionEnd = 0

        ' Locate section start (case-insensitive)
        For j = 1 To lastRow
            If LCase(Trim(ws.Cells(j, 2).Value)) = LCase(Trim(section)) Then
                sectionStart = j
                Exit For
            End If
        Next j
        If sectionStart = 0 Then GoTo NextSection

        ' Locate section end
        For j = sectionStart + 1 To lastRow
            If LCase(Trim(ws.Cells(j, 2).Value)) = "subtotal" Then
                sectionEnd = j - 1
                Exit For
            End If
        Next j
        If sectionEnd = 0 Then sectionEnd = lastRow

        Set tempData = New Collection
        maxAging(i) = 0
        sumAging(i) = 0
        countAging(i) = 0
        countProjects(i) = 0

        ' Collect rows
        For j = sectionStart To sectionEnd
            If Application.CountA(ws.Rows(j)) = 0 Then GoTo SkipRow

            Dim rfqDateVal As Variant
            Dim custReqDateVal As Variant
            Dim insideSalesVal As Variant
            Dim commitDateVal As Variant

            rfqDateVal = ws.Cells(j, colRFQ).Value
            custReqDateVal = ws.Cells(j, colCustomerRequest).Value
            commitDateVal = ws.Cells(j, colCBOMCommitDate).Value
            insideSalesVal = ws.Cells(j, colInsideSales).Value

            If IsDate(rfqDateVal) Then
                agingVal = Date - CDate(rfqDateVal)
            Else
                agingVal = ""   ' blank if invalid
            End If

            If LCase(Trim(section)) = "cbom" Then
                rowData = Array(ws.Cells(j, colSynced).Value, insideSalesVal, ws.Cells(j, colOppName).Value, _
                                rfqDateVal, commitDateVal, agingVal)
            Else
                rowData = Array(ws.Cells(j, colSynced).Value, insideSalesVal, ws.Cells(j, colOppName).Value, _
                                rfqDateVal, custReqDateVal, agingVal)
            End If

            tempData.Add rowData

            If IsDate(rfqDateVal) Then
                If agingVal > maxAging(i) Then maxAging(i) = agingVal
                sumAging(i) = sumAging(i) + agingVal
                countAging(i) = countAging(i) + 1
            End If

            If Trim(ws.Cells(j, colOppName).Value) <> "" Then
                countProjects(i) = countProjects(i) + 1
            End If

SkipRow:
        Next j

        With outSheet.Cells(outRow, 1)
            .Value = section
            .Font.Bold = True
            .Font.Size = 12
            .Font.Name = "Century Gothic"
        End With
        outRow = outRow + 1

        Dim hdrArray As Variant
        If LCase(Trim(section)) = "cbom" Then
            hdrArray = Array("Synced Quote", "Inside Sales", "Opportunity Name", "RFQ Received Date", "CBOM Commit Date", "Aging (days)")
        Else
            hdrArray = Array("Synced Quote", "Inside Sales", "Opportunity Name", "RFQ Received Date", "Customer Request Date", "Aging (days)")
        End If

        With outSheet.Range(outSheet.Cells(outRow, 1), outSheet.Cells(outRow, 6))
            .Value = hdrArray
            .Font.Bold = True
            .Interior.Color = RGB(200, 200, 200)
            .Font.Name = "Century Gothic"
        End With

        tableHeaderRows(i) = outRow
        Dim tableStartRow As Long: tableStartRow = outRow
        outRow = outRow + 1

        If tempData.Count > 0 Then
            For r = 1 To tempData.Count
                rowData = tempData(r)
                With outSheet.Cells(outRow, 1).Resize(1, 6)
                    .Value = rowData
                    .Font.Name = "Century Gothic"
                    If IsDate(rowData(3)) Then .Cells(1, 4).NumberFormat = "dd-mmm-yyyy" Else .Cells(1, 4).NumberFormat = "General"
                    If IsDate(rowData(4)) Then .Cells(1, 5).NumberFormat = "dd-mmm-yyyy" Else .Cells(1, 5).NumberFormat = "General"
                End With
                outRow = outRow + 1
            Next r
        Else
            outSheet.Cells(outRow, 1).Value = "No data"
            outSheet.Cells(outRow, 1).Font.Italic = True
            outSheet.Cells(outRow, 1).Font.Name = "Century Gothic"
            outRow = outRow + 1
        End If

        If outRow - 1 >= tableStartRow Then
            With outSheet.Range(outSheet.Cells(tableStartRow, 1), outSheet.Cells(outRow - 1, 6)).Borders
                .LineStyle = xlContinuous
                .Weight = xlThin
            End With
        End If

        If tempData.Count > 0 Then
            chartCount = chartCount + 1
            Dim chObj As ChartObject
            Set chObj = outSheet.ChartObjects.Add(Left:=outSheet.Columns(16).Left, Width:=350, _
                                                  Top:=outSheet.Cells(tableStartRow, 8).Top, Height:=150)
            chObj.Chart.ChartType = xlColumnClustered
            chObj.Chart.SetSourceData Source:=outSheet.Range(outSheet.Cells(tableStartRow + 1, 6), outSheet.Cells(outRow - 1, 6))
            chObj.Chart.SeriesCollection(1).XValues = outSheet.Range(outSheet.Cells(tableStartRow + 1, 1), outSheet.Cells(outRow - 1, 1))
            chObj.Chart.HasTitle = True
            chObj.Chart.ChartTitle.Text = section & " - RFQ Aging"
            chObj.Chart.Axes(xlCategory).HasTitle = True
            chObj.Chart.Axes(xlCategory).AxisTitle.Text = "Synced Quote"
            chObj.Chart.Axes(xlValue).HasTitle = True
            chObj.Chart.Axes(xlValue).AxisTitle.Text = "Aging (days)"
            chObj.Name = "Chart_" & chartCount
            chObj.Chart.SeriesCollection(1).ApplyDataLabels Type:=xlDataLabelsShowValue
        End If

        outRow = outRow + 2

NextSection:
    Next i

    ' Summary Table with Grand Total
    Dim summaryStartCol As Long: summaryStartCol = 9
    Dim summaryStartRow As Long: summaryStartRow = 1

    With outSheet.Cells(summaryStartRow, summaryStartCol)
        .Value = "Summary"
        .Font.Bold = True
        .Font.Name = "Century Gothic"
    End With
    With outSheet.Cells(summaryStartRow, summaryStartCol + 1)
        .Value = "Count of Projects"
        .Font.Bold = True
        .Font.Name = "Century Gothic"
    End With
    outSheet.Range(outSheet.Cells(summaryStartRow, summaryStartCol), outSheet.Cells(summaryStartRow, summaryStartCol + 1)).Interior.Color = RGB(200, 200, 200)

    Dim summaryRow As Long: summaryRow = summaryStartRow + 1
    Dim grandTotal As Long: grandTotal = 0

    For i = 0 To UBound(sectionHeaders)
        With outSheet.Cells(summaryRow, summaryStartCol)
            .Value = sectionHeaders(i)
            .Font.Name = "Century Gothic"
        End With
        With outSheet.Cells(summaryRow, summaryStartCol + 1)
            .Value = countProjects(i)
            .Font.Name = "Century Gothic"
        End With
        grandTotal = grandTotal + countProjects(i)
        summaryRow = summaryRow + 1
    Next i

    ' Grand Total
    With outSheet.Cells(summaryRow, summaryStartCol)
        .Value = "Grand Total"
        .Font.Bold = True
        .Font.Name = "Century Gothic"
    End With
    With outSheet.Cells(summaryRow, summaryStartCol + 1)
        .Value = grandTotal
        .Font.Bold = True
        .Font.Name = "Century Gothic"
    End With

    With outSheet.Range(outSheet.Cells(summaryStartRow, summaryStartCol), outSheet.Cells(summaryRow, summaryStartCol + 1)).Borders
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With

    ' Coloring for headers
    Dim sect As String
    Dim colorRGB As Variant
    Dim summaryHeaderRow As Long

    Dim functionColors As Object
    Set functionColors = CreateObject("Scripting.Dictionary")

    functionColors.Add "opportunity discussion", Array(230, 130, 238)
    functionColors.Add "organise", Array(197, 217, 241)
    functionColors.Add "scrub bom", Array(244, 176, 132)
    functionColors.Add "kom", Array(244, 204, 255)
    functionColors.Add "cbom", Array(255, 255, 0)
    functionColors.Add "quote preparation", Array(181, 230, 162)
    functionColors.Add "quote review & submission", Array(146, 208, 80)
    functionColors.Add "negotiation", Array(127, 214, 241)
    functionColors.Add "cbom re-work", Array(229, 21, 175)


    For i = 0 To UBound(sectionHeaders)
    sect = LCase(sectionHeaders(i))
    If functionColors.Exists(sect) Then
        colorRGB = functionColors(sect)
        If tableHeaderRows(i) > 0 And tableHeaderRows(i) <= outSheet.Rows.Count Then
            With outSheet.Range(outSheet.Cells(tableHeaderRows(i), 1), outSheet.Cells(tableHeaderRows(i), 6)).Interior
                .Color = RGB(colorRGB(0), colorRGB(1), colorRGB(2))
            End With
            With outSheet.Cells(tableHeaderRows(i) - 1, 1).Font
                .Color = RGB(0, 0, 0)
                .Bold = True
            End With
        Else
            Debug.Print "Invalid tableHeaderRows(" & i & "): " & tableHeaderRows(i)
        End If
    End If
Next i

    For i = 0 To UBound(sectionHeaders)
        sect = LCase(sectionHeaders(i))
        If functionColors.Exists(sect) Then
            colorRGB = functionColors(sect)
            summaryHeaderRow = summaryStartRow + 1 + i
            With outSheet.Cells(summaryHeaderRow, summaryStartCol).Interior
                .Color = RGB(colorRGB(0), colorRGB(1), colorRGB(2))
            End With
        End If
    Next i

    ' Highlight dates in column E before today with light red fill
    Dim lastUsedRow As Long
    Dim checkRow As Long
    Dim checkCell As Range

    lastUsedRow = outSheet.Cells(outSheet.Rows.Count, 5).End(xlUp).Row

    For checkRow = 1 To lastUsedRow
        Set checkCell = outSheet.Cells(checkRow, 5)
        If IsDate(checkCell.Value) Then
            If CDate(checkCell.Value) < Date Then
                checkCell.Interior.Color = RGB(255, 199, 206)
                checkCell.Font.Color = RGB(156, 0, 6)
            Else
                checkCell.Interior.ColorIndex = xlNone
                checkCell.Font.ColorIndex = xlAutomatic
            End If
        End If
    Next checkRow

    ' === Create "RFQ This Week" table 3 rows below summary in columns F & G ===
    Dim startOfWeek As Date, endOfWeek As Date
    Dim dict As Object
    Dim rfqVal As Variant, rfqDate As Variant
    Dim rowOut As Long
    Dim key As Variant
    Dim maxCol As Long
    Dim rfqTableStartRow As Long

    startOfWeek = Date - Weekday(Date, vbMonday) + 1
    endOfWeek = startOfWeek + 6

    Set dict = CreateObject("Scripting.Dictionary")

    ' Scan rows for RFQs received this week, collect unique RFQs
    For r = 3 To lastRow
        rfqVal = ws.Cells(r, colSynced).Value
        rfqDate = ws.Cells(r, colRFQ).Value
        If Not IsEmpty(rfqVal) And IsDate(rfqDate) Then
            If rfqDate >= startOfWeek And rfqDate <= endOfWeek Then
                If Not dict.Exists(rfqVal) Then dict.Add rfqVal, rfqDate
            End If
        End If
    Next r

    ' Starting row: 3 rows below Grand Total row in summary table
    rfqTableStartRow = summaryRow + 3

    ' Write heading "RFQ This Week"
    With outSheet.Cells(rfqTableStartRow - 1, 9)
        .Value = "RFQ This Week"
        .Font.Bold = True
        .Font.Size = 12
        .Font.Name = "Century Gothic"
    End With

    ' Write headers in columns F (6) and G (7)
    With outSheet.Range(outSheet.Cells(rfqTableStartRow, 9), outSheet.Cells(rfqTableStartRow, 10))
        .Value = Array("Synced Quote", "RFQ Received Date")
        .Font.Bold = True
        .Interior.Color = RGB(200, 200, 200)
        .Font.Name = "Century Gothic"
    End With

    rowOut = rfqTableStartRow + 1

    If dict.Count > 0 Then
        For Each key In dict.Keys
            outSheet.Cells(rowOut, 9).Value = key
            outSheet.Cells(rowOut, 10).Value = dict(key)
            outSheet.Cells(rowOut, 9).Font.Name = "Century Gothic"
            outSheet.Cells(rowOut, 10).Font.Name = "Century Gothic"
            outSheet.Cells(rowOut, 10).NumberFormat = "dd-mmm-yyyy"
            rowOut = rowOut + 1
        Next key

        With outSheet.Range(outSheet.Cells(rfqTableStartRow, 9), outSheet.Cells(rowOut - 1, 10)).Borders
            .LineStyle = xlContinuous
            .Weight = xlThin
        End With
        
        outSheet.Columns("F:G").AutoFit
    Else
        outSheet.Cells(rfqTableStartRow, 9).Value = "No RFQs received this week"
        outSheet.Cells(rfqTableStartRow, 9).Font.Italic = True
        outSheet.Cells(rfqTableStartRow, 9).Font.Name = "Century Gothic"
    End If
    ' ---manas patel br---
    

    MsgBox "? Done! Tables + charts saved to 'Extracted Summary' including this week's RFQs", vbInformation

End Sub


